{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/ui/acme-logo.tsx"],"sourcesContent":["import { GlobeAltIcon } from '@heroicons/react/24/outline';\nimport { lusitana } from '@/app/ui/fonts';\n\nexport default function AcmeLogo() {\n  return (\n    <div\n      className={`${lusitana.className} flex flex-row items-center leading-none text-white`}\n    >\n      <GlobeAltIcon className=\"h-12 w-12 rotate-[15deg]\" />\n      <p className=\"text-[44px]\">Acme</p>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AAAA;AADA;;;;AAGe,SAAS;IACtB,qBACE,ucAAC;QACC,WAAW,GAAG,mLAAA,CAAA,WAAQ,CAAC,SAAS,CAAC,mDAAmD,CAAC;;0BAErF,ucAAC,4UAAA,CAAA,eAAY;gBAAC,WAAU;;;;;;0BACxB,ucAAC;gBAAE,WAAU;0BAAc;;;;;;;;;;;;AAGjC"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/ui/login-form.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/ui/login-form.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/login-form.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,8cAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyR,GACtT,uDACA"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/ui/login-form.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/ui/login-form.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/login-form.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,8cAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqQ,GAClS,mCACA"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/login/page.tsx"],"sourcesContent":["import AcmeLogo from '@/app/ui/acme-logo';\nimport LoginForm from '@/app/ui/login-form';\n \nexport default function LoginPage() {\n  return (\n    <main className=\"flex items-center justify-center md:h-screen\">\n      <div className=\"relative mx-auto flex w-full max-w-[400px] flex-col space-y-2.5 p-4 md:-mt-32\">\n        <div className=\"flex h-20 w-full items-end rounded-lg bg-blue-500 p-3 md:h-36\">\n          <div className=\"w-32 text-white md:w-36\">\n            <AcmeLogo />\n          </div>\n        </div>\n        <LoginForm />\n      </div>\n    </main>\n  );\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IACtB,qBACE,ucAAC;QAAK,WAAU;kBACd,cAAA,ucAAC;YAAI,WAAU;;8BACb,ucAAC;oBAAI,WAAU;8BACb,cAAA,ucAAC;wBAAI,WAAU;kCACb,cAAA,ucAAC,0HAAA,CAAA,UAAQ;;;;;;;;;;;;;;;8BAGb,ucAAC,2HAAA,CAAA,UAAS;;;;;;;;;;;;;;;;AAIlB"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/auth.config.ts"],"sourcesContent":["import type { NextAuthConfig } from 'next-auth';\n \nexport const authConfig = {\n  pages: {\n    signIn: '/login',\n  },\n  callbacks: {\n    authorized({ auth, request: { nextUrl } }) {\n      const isLoggedIn = !!auth?.user;\n      const isOnDashboard = nextUrl.pathname.startsWith('/dashboard');\n      if (isOnDashboard) {\n        if (isLoggedIn) return true;\n        return false; // Redirect unauthenticated users to login page\n      } else if (isLoggedIn) {\n        return Response.redirect(new URL('/dashboard', nextUrl));\n      }\n      return true;\n    },\n  },\n  providers: [], // Add providers with an empty array for now\n} satisfies NextAuthConfig;"],"names":[],"mappings":";;;AAEO,MAAM,aAAa;IACxB,OAAO;QACL,QAAQ;IACV;IACA,WAAW;QACT,YAAW,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE;YACvC,MAAM,aAAa,CAAC,CAAC,MAAM;YAC3B,MAAM,gBAAgB,QAAQ,QAAQ,CAAC,UAAU,CAAC;YAClD,IAAI,eAAe;gBACjB,IAAI,YAAY,OAAO;gBACvB,OAAO,OAAO,+CAA+C;YAC/D,OAAO,IAAI,YAAY;gBACrB,OAAO,SAAS,QAAQ,CAAC,IAAI,IAAI,cAAc;YACjD;YACA,OAAO;QACT;IACF;IACA,WAAW,EAAE;AACf"}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/auth.ts"],"sourcesContent":["import NextAuth from 'next-auth';\nimport { authConfig } from './auth.config';\nimport Credentials from 'next-auth/providers/credentials';\nimport { z } from 'zod';\nimport { sql, db } from '@vercel/postgres';\nimport type { User } from '@/app/lib/definitions';\nimport bcrypt from 'bcrypt';\n\nconst client = await db.connect();\n\nasync function getUser(email: string): Promise<User | undefined> {\n    try {\n      console.log(email);\n      \n      const user = await client.sql<User>`SELECT * FROM users WHERE email=${email}`;\n      console.log(user.rows[0]);\n      \n      \n      return user.rows[0];\n    } catch (error) {\n      console.error('Failed to fetch user:', error);\n      throw new Error('Failed to fetch user.');\n    }\n  }\n \nexport const { auth, signIn, signOut } = NextAuth({\n  ...authConfig,\n  providers: [\n    Credentials({\n        async authorize(credentials) {\n          const parsedCredentials = z\n            .object({ email: z.string().email(), password: z.string().min(6) })\n            .safeParse(credentials);\n\n            if (parsedCredentials.success) {\n                const { email, password } = parsedCredentials.data;\n                const user = await getUser(email);\n                if (!user) return null;\n                const passwordsMatch = await bcrypt.compare(password, user.password);\n\n                if (passwordsMatch) return user;\n              }\n\n            console.log('Invalid credentials');\n            return null;\n        },\n      }),\n],\n\n});"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;AAEA;AANA;AAEA;AACA;AACA;;;;;;;AAIA,MAAM,SAAS,MAAM,kPAAA,CAAA,KAAE,CAAC,OAAO;AAE/B,eAAe,QAAQ,KAAa;IAChC,IAAI;QACF,QAAQ,GAAG,CAAC;QAEZ,MAAM,OAAO,MAAM,OAAO,GAAG,AAAM,CAAC,gCAAgC,EAAE,MAAM,CAAC;QAC7E,QAAQ,GAAG,CAAC,KAAK,IAAI,CAAC,EAAE;QAGxB,OAAO,KAAK,IAAI,CAAC,EAAE;IACrB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,MAAM,IAAI,MAAM;IAClB;AACF;AAEK,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,0WAAA,CAAA,UAAQ,AAAD,EAAE;IAChD,GAAG,8GAAA,CAAA,aAAU;IACb,WAAW;QACT,CAAA,GAAA,sNAAA,CAAA,UAAW,AAAD,EAAE;YACR,MAAM,WAAU,WAAW;gBACzB,MAAM,oBAAoB,qLAAA,CAAA,IAAC,CACxB,MAAM,CAAC;oBAAE,OAAO,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK;oBAAI,UAAU,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;gBAAG,GAChE,SAAS,CAAC;gBAEX,IAAI,kBAAkB,OAAO,EAAE;oBAC3B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,kBAAkB,IAAI;oBAClD,MAAM,OAAO,MAAM,QAAQ;oBAC3B,IAAI,CAAC,MAAM,OAAO;oBAClB,MAAM,iBAAiB,MAAM,+FAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;oBAEnE,IAAI,gBAAgB,OAAO;gBAC7B;gBAEF,QAAQ,GAAG,CAAC;gBACZ,OAAO;YACX;QACF;KACL;AAED"}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/lib/actions.ts"],"sourcesContent":["'use server';\n\n\n// import { signIn } from '@/auth';\nimport { AuthError } from 'next-auth';\nimport { z } from \"zod\";\nimport { db } from '@vercel/postgres';\nimport { revalidatePath } from 'next/cache';\nimport { redirect } from \"next/navigation\";\n\nconst client = await db.connect();\nconst FormSchema = z.object({\n  id: z.string(),\n  customerId: z.string({\n    invalid_type_error: 'Please select a customer.',\n  }),\n  amount: z.coerce\n    .number()\n    .gt(0, { message: 'Please enter an amount greater than $0.' }),\n  status: z.enum(['pending', 'paid'], {\n    invalid_type_error: 'Please select an invoice status.',\n  }),\n  date: z.string(),\n});\nexport type State = {\n    errors?: {\n      customerId?: string[];\n      amount?: string[];\n      status?: string[];\n    };\n    message?: string | null;\n  };\n   \nconst CreateInvoice = FormSchema.omit({ id: true, date: true });\n// Use Zod to update the expected types\nconst UpdateInvoice = FormSchema.omit({ id: true, date: true })\n\nexport async function authenticate(\n    prevState: string | undefined,\n    formData: FormData,\n  ) {\n    try {\n      await signIn('credentials', formData);\n    } catch (error) {\n      if (error instanceof AuthError) {\n        switch (error.type) {\n          case 'CredentialsSignin':\n            return 'Invalid credentials.';\n          default:\n            return 'Something went wrong.';\n        }\n      }\n      throw error;\n    }\n  }\n\nexport async function createInvoice(prevState: State, formData: FormData) {\n  // Validate form fields using Zod\n  const validatedFields = CreateInvoice.safeParse({\n    customerId: formData.get('customerId'),\n    amount: formData.get('amount'),\n    status: formData.get('status'),\n  }); \n\n  console.log(validatedFields);\n  // If form validation fails, return errors early. Otherwise, continue.\n  // If form validation fails, return errors early. Otherwise, continue.\n  if (!validatedFields.success) {\n    return {\n      errors: validatedFields.error.flatten().fieldErrors,\n      message: 'Missing Fields. Failed to Create Invoice.',\n    };\n  }\n\n//   const { customerId, amount, status } = CreateInvoice.parse ({\n//     customerId: formData.get('customerId'),\n//     amount: formData.get('amount'),\n//     status: formData.get('status'),\n//   });\n  // Prepare data for insertion into the database\n  const { customerId, amount, status } = validatedFields.data;\n\n  const amountInCents = amount * 100;\n  const date = new Date().toISOString().split('T')[0];\n \n  console.log(customerId+' '+date+' '+amount);\n\n  try {\n    await client.sql`\n    INSERT INTO invoices (customer_id, amount, status, date)\n    VALUES (${customerId}, ${amountInCents}, ${status}, ${date})\n  `;\n  } catch(error) {\n    console.error('Database Error:', error);\n    return { message: 'Databse error: Failed to create invoice.'};\n    \n  }\n//   const rawFormData = Object.fromEntries(formData.entries());\n//   console.log(rawFormData);\n  revalidatePath('/dashboard/invoices');\n  redirect('/dashboard/invoices');\n}\n\nexport async function updateInvoice( \n    id: string,\n    prevState: State,\n    formData: FormData,) {\n    \n    const validatedFields = UpdateInvoice.safeParse({\n        customerId: formData.get('customerId'),\n        amount: formData.get('amount'),\n        status: formData.get('status'),\n    });\n    \n    if (!validatedFields.success) {\n        return {\n        errors: validatedFields.error.flatten().fieldErrors,\n        message: 'Missing Fields. Failed to Update Invoice.',\n        };\n    }\n    \n    const { customerId, amount, status } = validatedFields.data;\n    const amountInCents = amount * 100;\n   \n    try{\n        await client.sql`\n        UPDATE invoices\n        SET customer_id = ${customerId}, amount = ${amountInCents}, status = ${status}\n        WHERE id = ${id}\n      `;\n\n    } catch(error) {\n      console.error('Database Error:', error);\n      return { message: 'Database error: Failed to update invoice' };\n      \n    }\n   \n    revalidatePath('/dashboard/invoices');\n    redirect('/dashboard/invoices');\n  }\n\n  export async function deleteInvoice(id: string) {\n    // throw new Error('Failed to Delete Invoice');\n\n    try {\n      await client.sql`DELETE FROM invoices WHERE id = ${id}`;\n      return { message: 'Deleted Invoice.' };\n    } catch(error) {\n        console.error('Database Error:', error);\n        return { message: 'Database error: Failed to delete invoice.'};\n    }\n    revalidatePath('/dashboard/invoices');\n  }"],"names":[],"mappings":"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"}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 556, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/.next-internal/server/app/login/page/actions.js"],"sourcesContent":["__turbopack_export_value__({\n  '344e743686735202b1d7d8cdb5a2ba161e7f837f': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['createInvoice'])(...args)),\n  '8b33d17ed6eb5484a6c9d06839b6fd76ea894e74': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['authenticate'])(...args)),\n  '9f9b112f9b8e50a0388c8a6e4f075faaa288ec94': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['updateInvoice'])(...args)),\n  'fdda32d133c9013289279e5c6922829d9811e4ab': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['deleteInvoice'])(...args)),\n});"],"names":[],"mappings":"AAAA,2BAA2B;IACzB,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,+EAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,gBAAgB,KAAK;IAC9I,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,+EAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,eAAe,KAAK;IAC7I,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,+EAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,gBAAgB,KAAK;IAC9I,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,+EAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,gBAAgB,KAAK;AAChJ"}},
    {"offset": {"line": 562, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}